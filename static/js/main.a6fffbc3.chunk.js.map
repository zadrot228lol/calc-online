{"version":3,"sources":["components/Center.tsx","components/Form.tsx","App.tsx","index.tsx"],"names":["Center","children","style","textAlign","display","justifyContent","Form","props","React","useState","Date","date","setDate","formik","useFormik","onSubmit","values","actions","online","addOnline","initialValues","gridTemplateColumns","handleSubmit","TextField","onChange","handleChange","value","name","id","label","placeholder","variant","utils","DateFnsUtils","disableToolbar","format","margin","KeyboardButtonProps","Button","type","marginTop","color","App","deleteOnline","setState","state","slice","filter","time","splitetTime","split","hour","minute","seconds","nanoid","src","getFullYear","getMonth","toString","length","getDate","getMainOnline","result","forEach","splitedTime","getSecondAnMinute","val","i","_result","Number","String","join","console","log","this","alignItems","height","Typography","component","List","className","subheader","map","ListItem","ListItemText","onClick","primary","Component","rootElement","document","getElementById","render"],"mappings":"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","file":"static/js/main.a6fffbc3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Center: React.FC = ({ children }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        textAlign: \"center\",\r\n        display: \"grid\",\r\n        justifyContent: \"center\"\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Center;\r\n","import React from \"react\";\r\nimport { FormikHelpers, useFormik } from \"formik\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\ntype FormProps = {\r\n  addOnline: (time: string, date: Date) => void;\r\n};\r\n\r\nconst Form: React.FC<FormProps> = (props) => {\r\n  let [date, setDate] = React.useState<Date>(new Date());\r\n  let onSubmit = (values: any, actions: FormikHelpers<{\r\n    online: string;\r\n  }>) => {\r\n    if (!values.online) {\r\n      return;\r\n    }\r\n    props.addOnline(values.online, date);\r\n  };\r\n\r\n  let formik = useFormik({\r\n    onSubmit,\r\n    initialValues: {\r\n      online: \"\"\r\n    }\r\n  });\r\n\r\n  return (\r\n    <form\r\n      style={{\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"1fr\"\r\n      }}\r\n      onSubmit={formik.handleSubmit}\r\n    >\r\n      <TextField\r\n        onChange={formik.handleChange}\r\n        value={formik.values.online}\r\n        name=\"online\"\r\n        id=\"online-input\"\r\n        label=\"Введите онлайн\"\r\n        placeholder=\"00:00:00\"\r\n        variant=\"standard\"\r\n      />\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <KeyboardDatePicker\r\n          disableToolbar\r\n          variant=\"inline\"\r\n          format=\"yyyy/MM/dd\"\r\n          margin=\"normal\"\r\n          id=\"online-date\"\r\n          value={date}\r\n          label=\"Выберите дату онлайна\"\r\n          onChange={(date, value) => setDate(date)}\r\n          name=\"date\"\r\n          KeyboardButtonProps={{\r\n            \"aria-label\": \"change date\"\r\n          }}\r\n        />\r\n      </MuiPickersUtilsProvider>\r\n      <Button\r\n        type=\"submit\"\r\n        style={{\r\n          marginTop: \"10px\"\r\n        }}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n      >\r\n        Добавить\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { Component } from \"react\";\nimport Center from \"./components/Center\";\nimport Form from \"./components/Form\";\nimport { nanoid } from \"nanoid\";\nimport { Typography } from \"@material-ui/core\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport './main.css';\ntype onlineElement = {\n  id: string;\n  time: string;\n  src: {\n    hour: string;\n    minute: string;\n    seconds: string;\n  };\n  date: string;\n};\n\ninterface AppState {\n  online: onlineElement[];\n}\n\nclass App extends React.Component<{}, AppState, any> {\n  constructor(props: any){\n    super(props);\n    this.state = {\n      online: []\n    };\n  }\n\n  deleteOnline = (id: string) => {\n    if(!id){\n      return;\n    }\n    this.setState({\n      online: this.state.online.slice().filter(online => online.id !== id)\n    })\n  }\n\n  addOnline = (time: string, date: Date) => {\n    if (!time || !date) {\n      return;\n    }\n    let splitetTime = time.split(\":\");\n    // const minute = splitetTime\n    const hour = splitetTime[0];\n    const minute = splitetTime[1];\n    const seconds = splitetTime[2];\n    if (!hour || !minute || !seconds) {\n      return;\n    }\n    this.setState({\n      online: [\n        {\n          id: nanoid(6),\n          time,\n          src: {\n            hour,\n            minute,\n            seconds\n          },\n          date: `${date.getFullYear()}-${((date.getMonth() + 1).toString()).length === 1 ? `0${date.getMonth() + 1}` : date.getMonth}-${(((date.getDate()).toString()).length === 1 ? `0${date.getDate()}` : date.getDate())}`\n        },\n        ...this.state.online\n      ]\n    });\n  };\n\n\n  getMainOnline = () => {\n    let result = \"00:00:00\";\n    this.state.online.forEach(online => {\n      let hour = online.src.hour.slice();\n      let minute = online.src.minute.slice();\n      let splitedTime = result.split(':');\n      let seconds = online.src.seconds.slice();\n\n      let getSecondAnMinute = (val: string, i: number) => {\n        let _result = (( Number(val) + Number(splitedTime[i]) ));\n        if(_result > 60){\n          if(i === 2){\n            splitedTime[0] = String(Number(splitedTime[0]) + 1);\n          }\n          _result = _result - 60;\n          return String(_result);\n        }\n        return String(_result);\n      }\n\n      if( (( Number(hour) + Number(splitedTime[0]) ).toString()).length === 1 ){\n        splitedTime[0] = `0${(( Number(hour) + Number(splitedTime[0]) ).toString())}`;\n      } else {\n        splitedTime[0] = (( Number(hour) + Number(splitedTime[0]) ).toString());\n      }\n      if( (( Number(minute) + Number(splitedTime[1]) ).toString()).length === 1 ){\n        splitedTime[1] = `0${getSecondAnMinute(minute, 1)}`;\n      } else {\n        splitedTime[1] = getSecondAnMinute(minute, 1);\n      }\n      if( (( Number(seconds) + Number(splitedTime[2]) ).toString()).length === 1 ){\n        splitedTime[2] = `0${getSecondAnMinute(seconds, 2)}`;\n      } else {\n        splitedTime[2] = getSecondAnMinute(seconds, 2);\n      }\n      \n      result = splitedTime.join(':');\n    });\n    return result;\n  }\n\n\n  render() {\n    console.log(this.getMainOnline());\n    \n    return (\n      <div style={{\n        display: 'grid',\n        alignItems: 'center',\n        height: '100%'\n      }}>\n        <Center>\n          <Typography variant=\"h4\" component=\"h4\">\n            Счётчик онлайна\n          </Typography>\n          <div>\n            <Form addOnline={this.addOnline} />\n          </div>\n          <p>Результат: {this.getMainOnline()}</p>\n          <div style={{\n            display: 'grid',\n            justifyContent: 'center',\n            marginTop: '10px'\n          }}>\n            <List className={'root-list'} subheader={<li />}>\n              {this.state.online.map((online: onlineElement) => <ListItem key={`item-${online.id}`}>\n                <ListItemText onClick={() => {\n                  this.deleteOnline(online.id);\n                }} primary={`${online.date}(${online.src.hour}:${online.src.minute}:${online.src.seconds})`} />\n              </ListItem>)}\n            </List>\n          </div>\n        </Center>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { render } from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}